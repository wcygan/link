apiVersion: v1
kind: Secret
metadata:
  name: auth-db-secrets
type: Opaque
stringData:
  url: postgres://authuser:authpass@auth-db:5432/auth-db?sslmode=disable
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: auth-db-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: auth-db
spec:
  replicas: 1
  selector:
    matchLabels:
      app: auth-db
  template:
    metadata:
      labels:
        app: auth-db
    spec:
      containers:
      - name: postgres
        image: postgres:13
        ports:
        - containerPort: 5432
        env:
        - name: POSTGRES_DB
          value: auth-db
        - name: POSTGRES_USER
          value: authuser
        - name: POSTGRES_PASSWORD
          value: authpass
        volumeMounts:
        - name: auth-db-storage
          mountPath: /var/lib/postgresql/data
        readinessProbe:
          exec:
            command: ["pg_isready", "-U", "authuser"]
          periodSeconds: 5
          failureThreshold: 3
        resources:
          requests:
            cpu: 100m
            memory: 256Mi
          limits:
            cpu: 500m
            memory: 512Mi
      volumes:
      - name: auth-db-storage
        persistentVolumeClaim:
          claimName: auth-db-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: auth-db
spec:
  selector:
    app: auth-db
  ports:
    - protocol: TCP
      port: 5432
      targetPort: 5432
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: auth-server
spec:
  selector:
    matchLabels:
      app: auth-server
  template:
    metadata:
      labels:
        app: auth-server
    spec:
      initContainers:
      - name: wait-for-auth-db
        image: busybox
        command: ['sh', '-c', 'until nc -z auth-db 5432; do echo waiting for auth-db; usleep 250000; done;']
      - name: run-migrations
        image: auth-server
        command: ['./migrate', '-path', '/app/migrations', '-database', '$(DATABASE_URL)', 'up']
        env:
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: auth-db-secrets
              key: url
      containers:
      - name: auth-server
        image: auth-server
        ports:
        - containerPort: 8080
        env:
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: auth-db-secrets
              key: url
        resources:
          requests:
            cpu: 100m
            memory: 128Mi
          limits:
            cpu: 500m
            memory: 256Mi
        readinessProbe:
          httpGet:
            path: /healthz
            port: 8080
          periodSeconds: 5
          failureThreshold: 3
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8080
          periodSeconds: 10
          failureThreshold: 3
        startupProbe:
          httpGet:
            path: /healthz
            port: 8080
          periodSeconds: 5
          failureThreshold: 12
---
apiVersion: v1
kind: Service
metadata:
  name: auth-server
spec:
  type: ClusterIP
  selector:
    app: auth-server
  ports:
  - port: 8080
    targetPort: 8080